// Formats the query result with the edges and nodes removed into what we want to return to the user
function formatQueryResult(queryResult, resultsKey, // Key that the actual results are in
paginationKey, // Key that the pagination info is in
resultsKeyToRemove, // Key that the results are nested under to remove for each entry
additionalModification) {
    const additionaProperties = Object.fromEntries(Object.entries(queryResult).filter(([key]) => key !== resultsKey && key !== paginationKey));
    let trimmedResults = queryResult[resultsKey];
    if (resultsKeyToRemove) {
        trimmedResults = trimmedResults.map((result) => result[resultsKeyToRemove] || {});
    }
    const formattedResultBase = {
        results: trimmedResults,
        pageInfo: queryResult[paginationKey],
    };
    let result = {
        ...formattedResultBase,
        ...additionaProperties,
    };
    if (additionalModification)
        result = additionalModification(result);
    return result;
}

export { formatQueryResult };
